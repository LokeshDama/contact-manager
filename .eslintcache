[{"/Users/balaji/learning/contact-manager/src/index.js":"1","/Users/balaji/learning/contact-manager/src/components/App.js":"2","/Users/balaji/learning/contact-manager/src/components/Header.js":"3","/Users/balaji/learning/contact-manager/src/api/contacts.js":"4","/Users/balaji/learning/contact-manager/src/constants/navigation.js":"5","/Users/balaji/learning/contact-manager/src/components/Routes.js":"6","/Users/balaji/learning/contact-manager/src/containers/ContactsContainer.js":"7","/Users/balaji/learning/contact-manager/src/components/contacts/ContactCard.js":"8","/Users/balaji/learning/contact-manager/src/components/contacts/ContactList.js":"9","/Users/balaji/learning/contact-manager/src/store/index.js":"10","/Users/balaji/learning/contact-manager/src/store/sagas/index.js":"11","/Users/balaji/learning/contact-manager/src/store/reducers/index.js":"12","/Users/balaji/learning/contact-manager/src/store/reducers/contactsReducer.js":"13","/Users/balaji/learning/contact-manager/src/store/reducers/teamProfilesReducer.js":"14","/Users/balaji/learning/contact-manager/src/store/sagas/contactsSaga.js":"15","/Users/balaji/learning/contact-manager/src/store/actions/actionTypes.js":"16","/Users/balaji/learning/contact-manager/src/store/actions/contacts.js":"17","/Users/balaji/learning/contact-manager/src/containers/AddContactContainer.js":"18","/Users/balaji/learning/contact-manager/src/components/contacts/AddContact.js":"19","/Users/balaji/learning/contact-manager/src/components/shared/FlashMessage/FlashMessage.js":"20","/Users/balaji/learning/contact-manager/src/history.js":"21","/Users/balaji/learning/contact-manager/src/containers/ContactDetailsContainer.js":"22","/Users/balaji/learning/contact-manager/src/components/contacts/ContactDetails.js":"23"},{"size":324,"mtime":1624112521092,"results":"24","hashOfConfig":"25"},{"size":380,"mtime":1624176528818,"results":"26","hashOfConfig":"25"},{"size":231,"mtime":1612494095000,"results":"27","hashOfConfig":"25"},{"size":617,"mtime":1624189340633,"results":"28","hashOfConfig":"25"},{"size":70,"mtime":1624106328869,"results":"29","hashOfConfig":"25"},{"size":889,"mtime":1624189179012,"results":"30","hashOfConfig":"25"},{"size":1176,"mtime":1624190594696,"results":"31","hashOfConfig":"25"},{"size":1025,"mtime":1624190641043,"results":"32","hashOfConfig":"25"},{"size":1130,"mtime":1624177982763,"results":"33","hashOfConfig":"25"},{"size":475,"mtime":1624191023940,"results":"34","hashOfConfig":"25"},{"size":155,"mtime":1624105828633,"results":"35","hashOfConfig":"25"},{"size":260,"mtime":1624113451321,"results":"36","hashOfConfig":"25"},{"size":1696,"mtime":1624190324656,"results":"37","hashOfConfig":"25"},{"size":236,"mtime":1624104932689,"results":"38","hashOfConfig":"25"},{"size":2128,"mtime":1624189403180,"results":"39","hashOfConfig":"25"},{"size":1178,"mtime":1624179155479,"results":"40","hashOfConfig":"25"},{"size":2047,"mtime":1624189392699,"results":"41","hashOfConfig":"25"},{"size":1840,"mtime":1624190343448,"results":"42","hashOfConfig":"25"},{"size":2572,"mtime":1624189967193,"results":"43","hashOfConfig":"25"},{"size":188,"mtime":1624174639842,"results":"44","hashOfConfig":"25"},{"size":88,"mtime":1624175744060,"results":"45","hashOfConfig":"25"},{"size":347,"mtime":1624178949389,"results":"46","hashOfConfig":"25"},{"size":799,"mtime":1624178925047,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1rbnnrt",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/balaji/learning/contact-manager/src/index.js",[],["99","100"],"/Users/balaji/learning/contact-manager/src/components/App.js",[],"/Users/balaji/learning/contact-manager/src/components/Header.js",[],"/Users/balaji/learning/contact-manager/src/api/contacts.js",[],"/Users/balaji/learning/contact-manager/src/constants/navigation.js",[],"/Users/balaji/learning/contact-manager/src/components/Routes.js",[],"/Users/balaji/learning/contact-manager/src/containers/ContactsContainer.js",["101"],"import { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport ContactList from \"../components/contacts/ContactList\";\nimport { fetchAllContacts, deleteContact, changeContactState } from '../store/actions/contacts';\n\nconst ContactsContainer = ({\n  contacts, error, success, loading,\n  fetchAllContacts, deleteContact, changeContactState\n}) => {\n  useEffect(() => {\n    fetchAllContacts();\n  }, [fetchAllContacts]);\n\n  useEffect(() => {\n    return () => {\n      changeContactState('success', null);\n      changeContactState('error', null);\n    }\n  }, [])\n\n  const handleContactDelete = (id) => {\n    if (window.confirm('Are you sure? Do you want to delete?')) {\n      deleteContact(id);\n    }\n  }\n\n  return (\n    <ContactList\n      loading={loading}\n      error={error}\n      success={success}\n      contacts={contacts}\n      onContactDelete={handleContactDelete} />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  const { contactsReducer } = state;\n  return {\n    ...contactsReducer\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchAllContacts,\n  deleteContact,\n  changeContactState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsContainer);\n","/Users/balaji/learning/contact-manager/src/components/contacts/ContactCard.js",[],"/Users/balaji/learning/contact-manager/src/components/contacts/ContactList.js",[],"/Users/balaji/learning/contact-manager/src/store/index.js",[],"/Users/balaji/learning/contact-manager/src/store/sagas/index.js",[],"/Users/balaji/learning/contact-manager/src/store/reducers/index.js",[],"/Users/balaji/learning/contact-manager/src/store/reducers/contactsReducer.js",[],"/Users/balaji/learning/contact-manager/src/store/reducers/teamProfilesReducer.js",["102"],"const initialState = {\n  profiles: [],\n}\n\nconst teamProfilesReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    default:\n      return state;\n  }\n}\n\nexport default teamProfilesReducer;\n","/Users/balaji/learning/contact-manager/src/store/sagas/contactsSaga.js",["103","104","105"],"import { call, put, takeLatest } from 'redux-saga/effects'\n\nimport { api } from '../../api/contacts'\nimport { CONTACTS_URL } from '../../constants/navigation'\nimport { CONTACT_ACTIONS } from '../actions/actionTypes'\nimport { fetchAllContactsSuccess, fetchAllContactsFailure, createContactSuccess, createContactFailure, deleteContact, deleteContactSuccess, updateContact, updateContactSuccess, fetchSingleContactSuccess } from '../actions/contacts'\nimport history from '../../history'\n\nfunction* fetchAllContactsSaga() {\n  try {\n    const response = yield call(api.fetchAllContacts)\n    yield put(fetchAllContactsSuccess(response.data))\n  } catch (err) {\n    yield put(fetchAllContactsFailure(err))\n  }\n}\n\nfunction* createContactSaga(action) {\n  try {\n    const response = yield call(api.createContact, action.payload)\n    yield put(createContactSuccess(response.data));\n    history.push(CONTACTS_URL);\n  } catch (err) {\n    yield put(createContactFailure(err))\n  }\n}\n\nfunction* deleteContactSaga(action) {\n  try {\n    const id = action.payload;\n    const response = yield call(api.deleteContact, id)\n    yield put(deleteContactSuccess(id));\n  } catch (err) {\n    yield put({})\n  }\n}\n\nfunction* updateContactSaga(action) {\n  try {\n    const { id, ...restProps } = action.payload;\n    const response = yield call(api.updateContact, id, restProps)\n    yield put(updateContactSuccess(response.data));\n    history.push(CONTACTS_URL);\n  } catch (err) {\n\n  }\n}\n\nfunction* fetchSingleContactSaga(action) {\n  try {\n    const id = action.payload;\n    const response = yield call(api.fetchSingleContact, id)\n    yield put(fetchSingleContactSuccess(response.data));\n  } catch (err) {\n    yield put({})\n  }\n}\n\nexport default function* contactsSaga() {\n  yield takeLatest(CONTACT_ACTIONS.ON_FETCHING_CONTACTS, fetchAllContactsSaga);\n  yield takeLatest(CONTACT_ACTIONS.ON_CREATE_CONTACT, createContactSaga);\n  yield takeLatest(CONTACT_ACTIONS.ON_DELETE_CONTACT, deleteContactSaga);\n  yield takeLatest(CONTACT_ACTIONS.ON_UPDATE_CONTACT, updateContactSaga);\n  yield takeLatest(CONTACT_ACTIONS.ON_FETCH_SINGLE_CONTACT, fetchSingleContactSaga);\n}\n","/Users/balaji/learning/contact-manager/src/store/actions/actionTypes.js",[],"/Users/balaji/learning/contact-manager/src/store/actions/contacts.js",[],"/Users/balaji/learning/contact-manager/src/containers/AddContactContainer.js",["106","107"],"import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport AddContact from '../components/contacts/AddContact';\nimport {\n  createContact, updateContact, fetchSingleContact,\n  changeContactState\n} from '../store/actions/contacts';\n\nconst AddContactContainer = ({\n  match, createContact, updateContact, fetchSingleContact, isEdit,\n  singleContact, changeContactState, error,\n}) => {\n  const [contact, setContact] = useState({\n    name: '',\n    email: ''\n  });\n\n  useEffect(() => {\n    return () => {\n      changeContactState('error', null);\n      changeContactState('singleContact', null);\n    }\n  }, [])\n\n  useEffect(() => {\n    if (isEdit && match.params && match.params.id) {\n      fetchSingleContact(match.params.id)\n    }\n  }, [match])\n\n  useEffect(() => {\n    if (singleContact) {\n      setContact(singleContact)\n    }\n  }, [singleContact])\n\n  const handleContactChange = (e) => {\n    setContact({ ...contact, [e.target.name]: e.target.value });\n  }\n\n  const handleContactAdd = (e) => {\n    e.preventDefault();\n    if (contact.name === '' || contact.email === '') {\n      changeContactState('error', 'Please enter name and email details.');\n      return\n    }\n    if (isEdit) {\n      updateContact(contact);\n    } else {\n      createContact(contact);\n    }\n  }\n\n  return (\n    <AddContact\n      isEdit={isEdit}\n      error={error}\n      contact={contact}\n      onContactChange={handleContactChange}\n      onContactAdd={handleContactAdd} />\n  )\n}\n\nconst mapStateToPros = (state) => {\n  const { contactsReducer } = state;\n  const { singleContact, error } = contactsReducer;\n  return {\n    singleContact,\n    error\n  }\n}\n\nconst mapDispatchToProps = {\n  createContact, updateContact, fetchSingleContact, changeContactState\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(AddContactContainer);\n","/Users/balaji/learning/contact-manager/src/components/contacts/AddContact.js",[],"/Users/balaji/learning/contact-manager/src/components/shared/FlashMessage/FlashMessage.js",[],"/Users/balaji/learning/contact-manager/src/history.js",[],"/Users/balaji/learning/contact-manager/src/containers/ContactDetailsContainer.js",[],"/Users/balaji/learning/contact-manager/src/components/contacts/ContactDetails.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":20,"column":6,"nodeType":"114","endLine":20,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":6,"column":17,"nodeType":"118","messageId":"119","endLine":6,"endColumn":24},{"ruleId":"116","severity":1,"message":"120","line":6,"column":104,"nodeType":"118","messageId":"119","endLine":6,"endColumn":117},{"ruleId":"116","severity":1,"message":"121","line":6,"column":141,"nodeType":"118","messageId":"119","endLine":6,"endColumn":154},{"ruleId":"116","severity":1,"message":"122","line":31,"column":11,"nodeType":"118","messageId":"119","endLine":31,"endColumn":19},{"ruleId":"112","severity":1,"message":"113","line":24,"column":6,"nodeType":"114","endLine":24,"endColumn":8,"suggestions":"123"},{"ruleId":"112","severity":1,"message":"124","line":30,"column":6,"nodeType":"114","endLine":30,"endColumn":13,"suggestions":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeContactState'. Either include it or remove the dependency array. If 'changeContactState' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["128"],"no-unused-vars","'payload' is assigned a value but never used.","Identifier","unusedVar","'deleteContact' is defined but never used.","'updateContact' is defined but never used.","'response' is assigned a value but never used.",["129"],"React Hook useEffect has missing dependencies: 'fetchSingleContact' and 'isEdit'. Either include them or remove the dependency array. If 'fetchSingleContact' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["130"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"131","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [changeContactState]",{"range":"136","text":"137"},{"range":"138","text":"137"},"Update the dependencies array to be: [fetchSingleContact, isEdit, match]",{"range":"139","text":"140"},[568,570],"[changeContactState]",[632,634],[763,770],"[fetchSingleContact, isEdit, match]"]