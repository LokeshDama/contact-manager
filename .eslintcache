[{"/Users/balaji/learning/contact-manager/src/index.js":"1","/Users/balaji/learning/contact-manager/src/components/App.js":"2","/Users/balaji/learning/contact-manager/src/components/Header.js":"3","/Users/balaji/learning/contact-manager/src/api/contacts.js":"4","/Users/balaji/learning/contact-manager/src/constants/navigation.js":"5","/Users/balaji/learning/contact-manager/src/components/Routes.js":"6","/Users/balaji/learning/contact-manager/src/containers/ContactsContainer.js":"7","/Users/balaji/learning/contact-manager/src/components/contacts/ContactCard.js":"8","/Users/balaji/learning/contact-manager/src/components/contacts/ContactList.js":"9","/Users/balaji/learning/contact-manager/src/store/index.js":"10","/Users/balaji/learning/contact-manager/src/store/sagas/index.js":"11","/Users/balaji/learning/contact-manager/src/store/reducers/index.js":"12","/Users/balaji/learning/contact-manager/src/store/reducers/contactsReducer.js":"13","/Users/balaji/learning/contact-manager/src/store/reducers/teamProfilesReducer.js":"14","/Users/balaji/learning/contact-manager/src/store/sagas/contactsSaga.js":"15","/Users/balaji/learning/contact-manager/src/store/actions/actionTypes.js":"16","/Users/balaji/learning/contact-manager/src/store/actions/contacts.js":"17","/Users/balaji/learning/contact-manager/src/containers/AddContactContainer.js":"18","/Users/balaji/learning/contact-manager/src/components/contacts/AddContact.js":"19","/Users/balaji/learning/contact-manager/src/components/shared/FlashMessage/FlashMessage.js":"20","/Users/balaji/learning/contact-manager/src/history.js":"21","/Users/balaji/learning/contact-manager/src/containers/ContactDetailsContainer.js":"22","/Users/balaji/learning/contact-manager/src/components/contacts/ContactDetails.js":"23","/Users/balaji/learning/contact-manager/src/containers/HomeContainer.js":"24","/Users/balaji/learning/contact-manager/src/components/home/UserProfiles.js":"25","/Users/balaji/learning/contact-manager/src/components/home/UserDetail.js":"26","/Users/balaji/learning/contact-manager/src/store/sagas/teamProfilesSaga.js":"27","/Users/balaji/learning/contact-manager/src/store/actions/teamProfiles.js":"28"},{"size":324,"mtime":1624112521092,"results":"29","hashOfConfig":"30"},{"size":380,"mtime":1624176528818,"results":"31","hashOfConfig":"30"},{"size":538,"mtime":1624195780359,"results":"32","hashOfConfig":"30"},{"size":753,"mtime":1624195565941,"results":"33","hashOfConfig":"30"},{"size":70,"mtime":1624106328869,"results":"34","hashOfConfig":"30"},{"size":1050,"mtime":1624195128927,"results":"35","hashOfConfig":"30"},{"size":1176,"mtime":1624190594696,"results":"36","hashOfConfig":"30"},{"size":1025,"mtime":1624190641043,"results":"37","hashOfConfig":"30"},{"size":1130,"mtime":1624177982763,"results":"38","hashOfConfig":"30"},{"size":475,"mtime":1624191023940,"results":"39","hashOfConfig":"30"},{"size":238,"mtime":1624195632209,"results":"40","hashOfConfig":"30"},{"size":260,"mtime":1624113451321,"results":"41","hashOfConfig":"30"},{"size":1696,"mtime":1624190324656,"results":"42","hashOfConfig":"30"},{"size":409,"mtime":1624197317160,"results":"43","hashOfConfig":"30"},{"size":2085,"mtime":1624197482115,"results":"44","hashOfConfig":"30"},{"size":1458,"mtime":1624195327195,"results":"45","hashOfConfig":"30"},{"size":2047,"mtime":1624189392699,"results":"46","hashOfConfig":"30"},{"size":1840,"mtime":1624190343448,"results":"47","hashOfConfig":"30"},{"size":2572,"mtime":1624189967193,"results":"48","hashOfConfig":"30"},{"size":188,"mtime":1624174639842,"results":"49","hashOfConfig":"30"},{"size":88,"mtime":1624175744060,"results":"50","hashOfConfig":"30"},{"size":347,"mtime":1624178949389,"results":"51","hashOfConfig":"30"},{"size":799,"mtime":1624178925047,"results":"52","hashOfConfig":"30"},{"size":805,"mtime":1624197418252,"results":"53","hashOfConfig":"30"},{"size":368,"mtime":1624196090228,"results":"54","hashOfConfig":"30"},{"size":310,"mtime":1624194939011,"results":"55","hashOfConfig":"30"},{"size":548,"mtime":1624196153987,"results":"56","hashOfConfig":"30"},{"size":363,"mtime":1624195986572,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1rbnnrt",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/balaji/learning/contact-manager/src/index.js",[],["118","119"],"/Users/balaji/learning/contact-manager/src/components/App.js",[],"/Users/balaji/learning/contact-manager/src/components/Header.js",[],"/Users/balaji/learning/contact-manager/src/api/contacts.js",[],"/Users/balaji/learning/contact-manager/src/constants/navigation.js",[],"/Users/balaji/learning/contact-manager/src/components/Routes.js",[],"/Users/balaji/learning/contact-manager/src/containers/ContactsContainer.js",["120"],"import { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport ContactList from \"../components/contacts/ContactList\";\nimport { fetchAllContacts, deleteContact, changeContactState } from '../store/actions/contacts';\n\nconst ContactsContainer = ({\n  contacts, error, success, loading,\n  fetchAllContacts, deleteContact, changeContactState\n}) => {\n  useEffect(() => {\n    fetchAllContacts();\n  }, [fetchAllContacts]);\n\n  useEffect(() => {\n    return () => {\n      changeContactState('success', null);\n      changeContactState('error', null);\n    }\n  }, [])\n\n  const handleContactDelete = (id) => {\n    if (window.confirm('Are you sure? Do you want to delete?')) {\n      deleteContact(id);\n    }\n  }\n\n  return (\n    <ContactList\n      loading={loading}\n      error={error}\n      success={success}\n      contacts={contacts}\n      onContactDelete={handleContactDelete} />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  const { contactsReducer } = state;\n  return {\n    ...contactsReducer\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchAllContacts,\n  deleteContact,\n  changeContactState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsContainer);\n","/Users/balaji/learning/contact-manager/src/components/contacts/ContactCard.js",[],"/Users/balaji/learning/contact-manager/src/components/contacts/ContactList.js",[],"/Users/balaji/learning/contact-manager/src/store/index.js",[],"/Users/balaji/learning/contact-manager/src/store/sagas/index.js",[],"/Users/balaji/learning/contact-manager/src/store/reducers/index.js",[],"/Users/balaji/learning/contact-manager/src/store/reducers/contactsReducer.js",[],"/Users/balaji/learning/contact-manager/src/store/reducers/teamProfilesReducer.js",[],"/Users/balaji/learning/contact-manager/src/store/sagas/contactsSaga.js",[],"/Users/balaji/learning/contact-manager/src/store/actions/actionTypes.js",[],"/Users/balaji/learning/contact-manager/src/store/actions/contacts.js",[],"/Users/balaji/learning/contact-manager/src/containers/AddContactContainer.js",["121","122"],"import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport AddContact from '../components/contacts/AddContact';\nimport {\n  createContact, updateContact, fetchSingleContact,\n  changeContactState\n} from '../store/actions/contacts';\n\nconst AddContactContainer = ({\n  match, createContact, updateContact, fetchSingleContact, isEdit,\n  singleContact, changeContactState, error,\n}) => {\n  const [contact, setContact] = useState({\n    name: '',\n    email: ''\n  });\n\n  useEffect(() => {\n    return () => {\n      changeContactState('error', null);\n      changeContactState('singleContact', null);\n    }\n  }, [])\n\n  useEffect(() => {\n    if (isEdit && match.params && match.params.id) {\n      fetchSingleContact(match.params.id)\n    }\n  }, [match])\n\n  useEffect(() => {\n    if (singleContact) {\n      setContact(singleContact)\n    }\n  }, [singleContact])\n\n  const handleContactChange = (e) => {\n    setContact({ ...contact, [e.target.name]: e.target.value });\n  }\n\n  const handleContactAdd = (e) => {\n    e.preventDefault();\n    if (contact.name === '' || contact.email === '') {\n      changeContactState('error', 'Please enter name and email details.');\n      return\n    }\n    if (isEdit) {\n      updateContact(contact);\n    } else {\n      createContact(contact);\n    }\n  }\n\n  return (\n    <AddContact\n      isEdit={isEdit}\n      error={error}\n      contact={contact}\n      onContactChange={handleContactChange}\n      onContactAdd={handleContactAdd} />\n  )\n}\n\nconst mapStateToPros = (state) => {\n  const { contactsReducer } = state;\n  const { singleContact, error } = contactsReducer;\n  return {\n    singleContact,\n    error\n  }\n}\n\nconst mapDispatchToProps = {\n  createContact, updateContact, fetchSingleContact, changeContactState\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(AddContactContainer);\n","/Users/balaji/learning/contact-manager/src/components/contacts/AddContact.js",[],"/Users/balaji/learning/contact-manager/src/components/shared/FlashMessage/FlashMessage.js",[],"/Users/balaji/learning/contact-manager/src/history.js",[],"/Users/balaji/learning/contact-manager/src/containers/ContactDetailsContainer.js",[],"/Users/balaji/learning/contact-manager/src/components/contacts/ContactDetails.js",[],"/Users/balaji/learning/contact-manager/src/containers/HomeContainer.js",["123"],"/Users/balaji/learning/contact-manager/src/components/home/UserProfiles.js",[],"/Users/balaji/learning/contact-manager/src/components/home/UserDetail.js",["124"],"import React from 'react'\nimport './UserDetail.css';\n\nconst UserDetail = ({ first_name, last_name, email, avatar }) => {\n  return (\n    <div className=\"userDetail\">\n      <p><strong>{first_name} {last_name}</strong></p>\n      <p>{email}</p>\n      <img src={avatar} />\n    </div>\n  )\n}\n\nexport {\n  UserDetail\n}\n","/Users/balaji/learning/contact-manager/src/store/sagas/teamProfilesSaga.js",[],"/Users/balaji/learning/contact-manager/src/store/actions/teamProfiles.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":20,"column":6,"nodeType":"131","endLine":20,"endColumn":8,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"130","line":24,"column":6,"nodeType":"131","endLine":24,"endColumn":8,"suggestions":"133"},{"ruleId":"129","severity":1,"message":"134","line":30,"column":6,"nodeType":"131","endLine":30,"endColumn":13,"suggestions":"135"},{"ruleId":"129","severity":1,"message":"136","line":13,"column":6,"nodeType":"131","endLine":13,"endColumn":8,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":9,"column":7,"nodeType":"140","endLine":9,"endColumn":27},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeContactState'. Either include it or remove the dependency array. If 'changeContactState' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["143"],["144"],"React Hook useEffect has missing dependencies: 'fetchSingleContact' and 'isEdit'. Either include them or remove the dependency array. If 'fetchSingleContact' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["145"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["146"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"147","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [changeContactState]",{"range":"154","text":"155"},{"range":"156","text":"155"},"Update the dependencies array to be: [fetchSingleContact, isEdit, match]",{"range":"157","text":"158"},"Update the dependencies array to be: [dispatch]",{"range":"159","text":"160"},[568,570],"[changeContactState]",[632,634],[763,770],"[fetchSingleContact, isEdit, match]",[417,419],"[dispatch]"]